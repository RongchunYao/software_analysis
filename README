命令是 clang -S -emit-llvm   -O1 hjx.cpp -o hjx.ll
使用了O1确保了是SSA模式（disable掉O0效果也一样）
 %5 = bitcast i8* %4 to i32*
  %6 = mul i32 %0, %0
  %7 = mul i32 %6, %0
  %8 = mul i32 %7, %6
  %9 = add nsw i32 %8, %0
  %10 = icmp sgt i32 %9, -1
  %11 = select i1 %10, i32 114514, i32 %0
  store i32 %11, i32* %5, align 4, !tbaa !2
  %12 = tail call i32 @_Z2fbPi(i32* nonnull %3)
  ret i32 %12
这里可以看到重复对%5进行了重复赋值。

int fb(int *h)
{
	return h[1]+3;
}

int a(int arg)
{
	int * b=new int[3];
	b[1]=arg;
	int *c=b;
	if(arg*arg*arg*arg*arg+arg+1>0) c[1]=114514;
	return fb(b);
}
这是因为用到了对堆上元素取地址的缘故，b[1]被c以指针的方式修改了值，但是fb的参数是整个的b数组，因此不易构造出完全SSA，尤其是b数组很大的时候。



